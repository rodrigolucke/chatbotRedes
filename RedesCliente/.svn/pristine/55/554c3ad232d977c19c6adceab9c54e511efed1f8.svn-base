/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.unisc.tela;

import br.unisc.model.Cliente;
import br.unisc.rules.ChatBot;
import br.unisc.rules.ChatBot.*;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.net.Socket;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Pazinato
 */
public class Principal extends javax.swing.JFrame {

    private Socket socketCli;
    private ChatBot comando;
    private Cliente cliente;
    
    
    public Principal() {
        initComponents();
    }

    private class ThreadCliente implements Runnable {

        private ObjectInputStream input;

        public ThreadCliente(Socket socketCli){
            try {
                this.input = new ObjectInputStream(socketCli.getInputStream());
            } catch (IOException ex) {
                Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
            }
           
            }

        @Override
        public void run() {
             ChatBot comando = null;
               try {
                    while ((comando = (ChatBot) input.readObject()) != null) {
                        Acao acao = comando.getAcao();
                        
                        switch (acao) {
                            case CONECTAR:
                                conectar(comando);
                                break;
                            case DESCONECTAR:
                                desconectar(comando);
                                socketCli.close();
                                return;
                            case ENVIAR:
                                System.out.println("::: " + comando.getTexto() + " :::");
                                //receber(comando);
                                break;
                            default:
                                break;
                        }
                    }
                } catch (IOException ex) {
                    Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
                }
        }
       
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        ta_chat = new javax.swing.JTextArea();
        tf_mensagem = new javax.swing.JTextField();
        bt_enviar = new javax.swing.JButton();
        lb_conecta = new javax.swing.JLabel();
        tf_Ip = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        tf_Porta = new javax.swing.JTextField();
        bt_conectar = new javax.swing.JButton();
        lb_infoCliente = new javax.swing.JLabel();
        bt_desconectar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        ta_chat.setColumns(20);
        ta_chat.setRows(5);
        jScrollPane1.setViewportView(ta_chat);

        tf_mensagem.setEnabled(false);

        bt_enviar.setText("ENVIAR");
        bt_enviar.setEnabled(false);

        lb_conecta.setText("Conectar em: ");

        jLabel2.setText(":");

        bt_conectar.setText("CONECTAR");
        bt_conectar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_conectarActionPerformed(evt);
            }
        });

        bt_desconectar.setText("DESCONECTAR");
        bt_desconectar.setEnabled(false);
        bt_desconectar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_desconectarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(tf_mensagem, javax.swing.GroupLayout.PREFERRED_SIZE, 481, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(bt_enviar, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lb_conecta)
                                        .addGap(2, 2, 2)
                                        .addComponent(tf_Ip, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(tf_Porta, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(lb_infoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 415, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(66, 66, 66)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(bt_desconectar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(bt_conectar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(0, 4, Short.MAX_VALUE)))
                        .addGap(0, 10, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lb_conecta)
                    .addComponent(tf_Ip, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(tf_Porta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bt_conectar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lb_infoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bt_desconectar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 334, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tf_mensagem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bt_enviar))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bt_conectarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_conectarActionPerformed
            
        try {
            this.comando = new ChatBot();
            this.comando.setAcao(Acao.CONECTAR);
            this.comando.setTexto("Nova conex√£o requisitada: ");
            this.comando.setNome("");

            this.cliente = new Cliente();
            this.socketCli = this.cliente.Conectar(tf_Ip.getText(),Integer.parseInt(tf_Porta.getText()));
            
            new Thread(new ThreadCliente(this.socketCli)).start();

            this.cliente.enviaMensagem(comando);
        } catch (IOException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_bt_conectarActionPerformed

    private void bt_desconectarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_desconectarActionPerformed
        ChatBot comando = new ChatBot();
        comando.setAcao(Acao.DESCONECTAR);
        comando.setTexto(this.comando.getNome()+" Desconectou!");
        comando.setNome(this.comando.getNome());
        try {
            this.cliente.enviaMensagem(comando);
        } catch (IOException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_bt_desconectarActionPerformed

    public void conectar(ChatBot comando){
        this.comando = comando;
        bt_conectar.setEnabled(false);
        tf_Ip.setEditable(false);
        tf_Porta.setEditable(false);
        tf_mensagem.setEnabled(true);
        bt_desconectar.setEnabled(true);
        bt_enviar.setEnabled(true);
        lb_infoCliente.setText(this.comando.getTexto()+"em "+tf_Ip.getText()+" : "+tf_Porta.getText());
        ta_chat.append(this.comando.getTexto()+"\n");
    }
    
    public void desconectar(ChatBot comando){
        bt_conectar.setEnabled(true);
        tf_Ip.setEditable(true);
        tf_Ip.setText("");
        tf_Porta.setEditable(true);
        tf_mensagem.setEnabled(false);
        tf_mensagem.setText("");
        tf_Porta.setText("");
        bt_desconectar.setEnabled(false);
        bt_enviar.setEnabled(false);
        lb_infoCliente.setText("");
        ta_chat.append(comando.getTexto()+"\n");
    }
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bt_conectar;
    private javax.swing.JButton bt_desconectar;
    private javax.swing.JButton bt_enviar;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lb_conecta;
    private javax.swing.JLabel lb_infoCliente;
    private javax.swing.JTextArea ta_chat;
    private javax.swing.JTextField tf_Ip;
    private javax.swing.JTextField tf_Porta;
    private javax.swing.JTextField tf_mensagem;
    // End of variables declaration//GEN-END:variables
}
